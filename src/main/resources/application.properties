# Server Configuration
server.port=8080

# Spring Security Configuration
spring.security.user.name=admin
# Uncomment the following line if you wish to set an environment variable for the password
# spring.security.user.password=${ADMIN_PASSWORD}
# Hardcoded password for testing purposes (Replace with ${ADMIN_PASSWORD} in production)
ADMIN_PASSWORD=admintest

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/careerguide
# Uncomment these lines to use environment variables for database credentials in production
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}

# Database credentials (temporary hardcoded for testing, replace with environment variables for security)
spring.datasource.username=root
spring.datasource.password=Bob1234avb

# JPA and Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Logging Configuration
logging.level.root=INFO
logging.level.com.careerguideaiofficial=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# OpenAI API Configuration
# Environment variable recommended for API key, or set directly here for testing purposes
# Uncomment this line if you want to use an environment variable
openai.api.key=${OPENAI_API_KEY}
#openai.api.key=your_actual_api_key_here  # Replace with actual key if testing directly

# API settings for OpenAI
openai.api.url=https://api.openai.com/v1/chat/completions
openai.api.model=gpt-3.5-turbo

# Adjust max tokens if responses are too large for the database column
openai.api.max-tokens=2000  # Lower this value if responses are too long (e.g., 1000)
openai.api.temperature=0.7

# Database column length recommendations
# Ensure your MySQL 'answer' column is set to TEXT, MEDIUMTEXT, or LONGTEXT if the responses are long.
# Example SQL command to modify the column type:
# ALTER TABLE your_table MODIFY answer TEXT;